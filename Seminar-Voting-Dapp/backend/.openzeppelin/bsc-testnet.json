{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x1C62B18f9812C377048c6Fb686055df72CB0a43B",
      "txHash": "0x0b3a5db201940dc0dde7b8a71ff225f0476ac17bda0619433b1dd19e366df2f5",
      "kind": "transparent"
    },
    {
      "address": "0xF339E8D392356ebEbBeeA60FDfD96096EEd77Cf8",
      "txHash": "0x69644693e9a533d3ab3ef8b9b0cbe3167b8cfe1698779e34b34c151ab747bdad",
      "kind": "transparent"
    },
    {
      "address": "0x09B740c2B52E18966f7D659D0AF3de3D1750a488",
      "txHash": "0xed76b2372132637e51eef769f3daa77a94d36c4d9536f738d91d7aede3ebbd3e",
      "kind": "transparent"
    },
    {
      "address": "0x498E114B9cF4f92E7799b33436A6E0DbA1d82a2C",
      "txHash": "0x27e3568bb2f824175d3f97731653bb10d8b36b364334311f4ba62f30e9caef75",
      "kind": "transparent"
    },
    {
      "address": "0x971317FB7C8ec35e7823D152C2f6aAC7C16D21A2",
      "txHash": "0x18b3af684dd8a561a693a4d1e51f32ac976568ba93dc56ec2a0884a4618bdfe8",
      "kind": "transparent"
    },
    {
      "address": "0x713cb82622251C30c1C00831F87DB5742f78fB4D",
      "txHash": "0x4a934a940dd220ed283d5e2c9ba0ed6f605642044b970d28ce85f2ebdfeb469b",
      "kind": "transparent"
    },
    {
      "address": "0xd2068355EdCBA68bB9D7a2Cecb0ff5d3fe3ecE2e",
      "txHash": "0xa0a4f979c9714deacd71f5c1ab99c88ffd36c5a70fda13e12b96f13a8dc35e7d",
      "kind": "transparent"
    },
    {
      "address": "0xB764fACBE0b8c8e3fca33d8e51B8081b5d553DDB",
      "txHash": "0x8cb86969ba29fa7dfcad06396c84a91285e7462e1740146da4410d4f28d88a4e",
      "kind": "transparent"
    },
    {
      "address": "0x6dEd22c30e5712E7d90EebDabD3389abAAC825a1",
      "txHash": "0x840c67d29ed072b465e850bc36f0111980a7c19c0ef4f23d275adb528cebbde6",
      "kind": "transparent"
    },
    {
      "address": "0xF216345b37f261c379aF57141e24c2f248dFf4D8",
      "txHash": "0x9758c651139c1d964147837b99c45ef8434f48187fb0e38456ab83d1d1610b35",
      "kind": "transparent"
    },
    {
      "address": "0x56469EAA6257c12Fb7F34687F8EBe55e25A4EB10",
      "txHash": "0x4dea6834b58bf5306ee18ce6dedb89271a38cdfa0691a4c43859a164810ca7b9",
      "kind": "transparent"
    },
    {
      "address": "0x2Ac1082b6DCABBE2765a08D760BaA12F7eEa01e3",
      "txHash": "0xeac214456d2aa83c2b527b446087f889eee634ec3817eff9160a1d8d985dfc02",
      "kind": "transparent"
    },
    {
      "address": "0x6fEf9C8deb1646D2d8A97C29D9712e87985293Ea",
      "txHash": "0xa2addc61e64a2b01b4ebb03d24639a689d4752a7cad7f0314ec62819e203fdc0",
      "kind": "transparent"
    }
  ],
  "impls": {
    "5b893abf8dea773d59f5dc46d84930ee5e80cbd961c8b33326322cbd77c27442": {
      "address": "0xF45c1B875513277e9D4DDc115dB03F0FADe647b5",
      "txHash": "0x44d4665c5b07606d0337874b8f4346c186190f57082ca7ae4e6790cad9580f87",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "SeminarNFT",
            "src": "contracts\\SeminarNFT.sol:9"
          },
          {
            "label": "seminars",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(SeminarData)6571_storage)",
            "contract": "SeminarNFT",
            "src": "contracts\\SeminarNFT.sol:22"
          },
          {
            "label": "seminarSpeakers",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SeminarNFT",
            "src": "contracts\\SeminarNFT.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)310_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)619_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)211_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_struct(SeminarData)6571_storage)": {
            "label": "mapping(uint256 => struct SeminarNFT.SeminarData)",
            "numberOfBytes": "32"
          },
          "t_struct(SeminarData)6571_storage": {
            "label": "struct SeminarNFT.SeminarData",
            "members": [
              {
                "label": "seminarId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "nameSpeaker",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "metadataURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "speaker",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6b6430977c3aec377f9c24d794b20ed0e018cd6cb0ecc8d25d81a7f1b610c397": {
      "address": "0xeb1cc803D023FA16f26dd6F4Ec6c1f621856558e",
      "txHash": "0x313a916647888ef502dcd095300c61076ec49c0e7b4b789d46b342994002d911",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "votersList",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage",
            "contract": "WhitelistUpgradeableV2",
            "src": "contracts\\Whitelist.sol:23"
          },
          {
            "label": "nameList",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_string_storage)",
            "contract": "WhitelistUpgradeableV2",
            "src": "contracts\\Whitelist.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)211_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)151_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f250a50bfb3f7c7f4a592a8bf281622fb7b9956806e3489c1fab44eb6b0c4772": {
      "address": "0x14364Fb69381aca98beb66EbE14081049edbd4D1",
      "txHash": "0xb617f364fd04283074e9f54b58ee0c48d1370d883ebb90e4e4f09d35f83476f4",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "SeminarNFT",
            "src": "contracts\\SeminarNFT.sol:15"
          },
          {
            "label": "seminars",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(SeminarData)6575_storage)",
            "contract": "SeminarNFT",
            "src": "contracts\\SeminarNFT.sol:28"
          },
          {
            "label": "seminarSpeakers",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "SeminarNFT",
            "src": "contracts\\SeminarNFT.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)310_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)619_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)211_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)151_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SeminarData)6575_storage)": {
            "label": "mapping(uint256 => struct SeminarNFT.SeminarData)",
            "numberOfBytes": "32"
          },
          "t_struct(SeminarData)6575_storage": {
            "label": "struct SeminarNFT.SeminarData",
            "members": [
              {
                "label": "seminarId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "nameSpeaker",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "metadataURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "speakers",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7aab165d008326b3aef3068ed7d5a204e46597b65d13b512e56067a989c0d625": {
      "address": "0xD8B9177764083Ab4e0fEF1C0abFCC82ea572860C",
      "txHash": "0xe38366588824c9578c42b26908020dc27390aa4c268da2310ba72c77cd7b6e17",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "seminarNFT",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(SeminarNFT)6876",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:29"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(WhitelistUpgradeableV2)9056",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:30"
          },
          {
            "label": "votingRounds",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(VotingRound)6943_storage)",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:32"
          },
          {
            "label": "userVotesForSeminar",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:33"
          },
          {
            "label": "userVotesForSpeaker",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:34"
          },
          {
            "label": "totalVotes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:35"
          },
          {
            "label": "nextRoundId",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)211_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(SeminarNFT)6876": {
            "label": "contract SeminarNFT",
            "numberOfBytes": "20"
          },
          "t_contract(WhitelistUpgradeableV2)9056": {
            "label": "contract WhitelistUpgradeableV2",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VotingRound)6943_storage)": {
            "label": "mapping(uint256 => struct Voting.VotingRound)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VotingRound)6943_storage": {
            "label": "struct Voting.VotingRound",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxVotesPerVoterForSeminar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxVotesPerVoterForSpeaker",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "seminarIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "speakersInRound",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "speakerVotes",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "votersForSeminar",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votersForSpeaker",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "seminarExist",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "speakerExist",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "checkVotedSeminar",
                "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "checkVotedSpeaker",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
